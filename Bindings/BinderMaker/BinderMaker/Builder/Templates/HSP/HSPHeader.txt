//=============================================================================
// LNote
//=============================================================================

#include "user32.as"

#ifndef __lnote__
#define __lnote__

#uselib "LNote.dll"

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
#define LN_MUSICTIMEBASE 768
//#define LN_EXCEPTION_WIN32_MESSAGE 0xA000

//-----------------------------------------------------------------------------
// enum
//-----------------------------------------------------------------------------
__ENUMS__

//-----------------------------------------------------------------------------
// funcs
//-----------------------------------------------------------------------------
__FUNCS__

        const string ASFileFooter = @"
#func LException_SetEnableWrappedException ""LException_SetEnableWrappedException"" int
#func LHSPInternal_GetIntPtrStringLength ""LHSPInternal_GetIntPtrStringLength"" int, var
#func LHSPInternal_GetIntPtrString ""LHSPInternal_GetIntPtrString"" int, var

//------------------------------------------------------------------------------
// overrides
//------------------------------------------------------------------------------

//--------------------------------------------------------------------------
// LManager_Initialize
#deffunc _LManager_Initialize
	_LConfig_SetUserWindowHandle@ hwnd
	__LManager_Initialize@
	return stat
	
//--------------------------------------------------------------------------
// LManager_Update
#deffunc _LManager_Update
	__LManager_Update@
	await 0
	return stat
	
//--------------------------------------------------------------------------
// LFile_ExistDirectoryOrEXE(stat: 0=なし 1=ディレクトリに存在(優先) 2=EXEに存在)
#deffunc LFile_ExistDirectoryOrEXE str p1
	b = LN_FALSE@
	_LFile_Exists@ p1, b
	if b != LN_FALSE@ : return 1
	exist p1
	if strsize != -1 : return 2
	return 0

//--------------------------------------------------------------------------
// LManager_InitializeAudio
#deffunc _LManager_InitializeAudio
	_LConfig_SetUserWindowHandle@ hwnd
	__LManager_InitializeAudio@
	return

//--------------------------------------------------------------------------
// LAudio_PlayBGM
#deffunc _LAudio_PlayBGM str p1, int p2, int p3, int p4
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlayBGMMem@ buf, strsize, p2, p3, p4
	} else : if stat == 1 {
		__LAudio_PlayBGM@ p1, p2, p3, p4
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlayBGM""
	}
	return

//--------------------------------------------------------------------------
// LAudio_PlayBGS
#deffunc _LAudio_PlayBGS str p1, int p2, int p3, int p4
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlayBGSMem@ buf, strsize, p2, p3, p4
	} else : if stat == 1 {
		__LAudio_PlayBGS@ p1, p2, p3, p4
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlayBGS""
	}
	return

//--------------------------------------------------------------------------
// LAudio_PlayME
#deffunc _LAudio_PlayME str p1, int p2, int p3
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlayMEMem@ buf, strsize, p2, p3
	} else : if stat == 1 {
		__LAudio_PlayME@ p1, p2, p3
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlayME""
	}
	return

//--------------------------------------------------------------------------
// LAudio_PlaySE
#deffunc _LAudio_PlaySE str p1, int p2, int p3
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlaySEMem@ buf, strsize, p2, p3
	} else : if stat == 1 {
		__LAudio_PlaySE@ p1, p2, p3
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlaySE""
	}
	return

//--------------------------------------------------------------------------
// LAudio_PlaySE3D
#deffunc _LAudio_PlaySE3D str p1, var p2, double p3, int p4, int p5
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlaySE3DMem@ buf, strsize, p2, p3, p4, p5
	} else : if stat == 1 {
		__LAudio_PlaySE3D@ p1, p2, p3, p4, p5
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlaySE3D""
	}
	return

//--------------------------------------------------------------------------
// LAudio_PlaySE3D
#deffunc _LAudio_PlaySE3DXYZ str p1, double p2, double p3, double p4, double p5, int p6, int p7
	LFile_ExistDirectoryOrEXE p1
	if stat == 2 {
		sdim buf, strsize
		bload p1, buf, strsize
		_LAudio_PlaySE3DMemXYZ@ buf, strsize, p2, p3, p4, p5, p6, p7
	} else : if stat == 1 {
		__LAudio_PlaySE3DXYZ@ p1, p2, p3, p4, p5, p6, p7
	} else {
		_LException_Raise@ LN_ERR_FILE_NOT_FOUND@, p1, __file__, __line__, ""_LAudio_PlaySE3D""
	}
	return

//--------------------------------------------------------------------------
// LMatrix_Identity
#deffunc _LMatrix_Identity var p1
	if (length(p1) < 16) : dim p1, 16
    __LMatrix_Identity@ p1
    return

//--------------------------------------------------------------------------
// LQuaternion_Identity
#deffunc _LQuaternion_Identity var p1
	if (length(p1) < 4) : dim p1, 4
    __LQuaternion_Identity@ p1
    return

//--------------------------------------------------------------------------
// LRandom_SetSeed
#deffunc _LRandom_SetSeed var p1, int p2
	if (length(p1) < 4) : dim p1, 4
    __LRandom_SetSeed@ p1, p2
    return

__INTERNAL_DEFILES__

#global

// 例外発生時にコールバックされるラベルの登録
#define LException_SetHandler(%1) oncmd gosub %1, LN_EXCEPTION_WIN32_MESSAGE

goto *lexception_default_label_dummy

// デフォルトの例外ジャンプ
*lexception_default_label
	LException_ProcDefault
	// HSP外部からの SendMessage() によるコールバック内では、
	// end ひとつだけだと終了できないみたい。
	// (ひとつめ:PostQuit → ふたつめ:Dispatch のように流れている？)
	end
	end
	return

*lexception_default_label_dummy

// デフォルト登録
//LException_SetHandler *lexception_default_label


#endif  // __lnote__
