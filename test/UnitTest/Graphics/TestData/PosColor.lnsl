//=============================================================================
#ifdef LN_HLSL_DX9

VS_OUTPUT vsBasic(
	float3 inPos	: POSITION,
	float4 inColor	: COLOR0)
{
	VS_OUTPUT o;
	o.Pos   = mul(float4(inPos, 1.0f), g_worldMatrix);
	o.Pos   = mul(o.Pos, g_viewProjMatrix);
	o.Color = inColor;
	return o;
}

float4 psBasic(
	float4 inColor	: COLOR0) : COLOR0
{
    return inColor;
}

technique MainDraw
{
	pass P0
	{
		VertexShader = compile vs_3_0 vsBasic();
		PixelShader	 = compile ps_3_0 psBasic();
	}
}

#endif

//=============================================================================
#ifdef LN_GLSL_VERTEX
attribute vec4 ln_Vertex;
attribute vec4 ln_Color;
varying vec4 vColor;
void main() {
	vColor = ln_Color;
	gl_Position = ln_Vertex;
}
#endif

//=============================================================================
#ifdef LN_GLSL_FRAGMENT
varying vec4 vColor;
void main()
{
	gl_FragColor = vColor;
}
#endif