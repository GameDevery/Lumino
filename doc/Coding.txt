

エンジンのルートオブジェクト/シングルトンの扱い方
----------------------------------------
Engine::Initialize() のような static クラスとする。
- ユーザーにインスタンスを作らせるのは煩わしくなる気がする
- 組み込みを考慮したエンジンなので、グローバルスコープを汚すのはNG
	- ln::Engine.Initialize() とかは？ → ユーザーにコンストラクタを公開することになる。
- シングルトンの GetInstans() も冗長。今後派生させる必要が出てきたら変えるかもしれないけど、今は無し。

### 参考
グローバル変数
- UE4 (GEngine)

static クラス
- Unity (http://docs.unity3d.com/ja/current/ScriptReference/Application.LoadLevel.html)
- Siv3D (System)
- SFML (Keyboard とか)

インスタンスを自分で作る
- Cocos2dx
- Ogre

変数名は小文字ではじめる
----------------------------------------
以前、public メンバ変数は大文字ではじめていたが、クラス名とバッティングすることがあった。
UE4 のようにクラス名にプレフィックスがついているならいいのだが、それも全部はずしたので。

定数名は大文字ではじめる
----------------------------------------
変数と区別しやすくするため。定数名とクラス名がかぶることはほぼない（これまでも無かった）し、
この2つはインテリセンスの補助を受けても区別しづらいことがある。
特にC++では static 変数は a.b でも a::b でも呼び出せてしまうので。







