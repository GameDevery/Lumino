
#include "Internal.h"
#include "EffectDriver.h"
#include <Lumino/Effect/VisualEffect.h>
#include <Lumino/Effect/VisualEffectInstance.h>

LN_NAMESPACE_BEGIN

//=============================================================================
// VisualEffect
//=============================================================================

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
void VisualEffect::Initialize(detail::EffectCore* core)
{
	LN_REFOBJ_SET(m_core, core);
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
VisualEffectInstance* VisualEffect::Play(bool overlap)
{
	// TODO: VisualEffectInstance は状態も持たない単なるラッパー。GUIのイベント引数みたいに中身差し替えでキャッシュしてもいい。
	return nullptr;
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
void VisualEffect::Stop()
{
	for (auto* inst : m_instanceList)
	{
	}
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
bool VisualEffect::IsPlaying() const
{
	for (auto* inst : m_instanceList)
	{
	}
	return false;
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
void VisualEffect::SetSyncEffects(bool enabled)
{
	m_syncEffects = enabled;
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
void VisualEffect::SetWorldMatrix(const Matrix& matrix)
{
	m_worldMatrix = matrix;
}

//
//
////-----------------------------------------------------------------------------
////
////-----------------------------------------------------------------------------
//EffectManager::EffectManager()
//{
//}
//
////-----------------------------------------------------------------------------
////
////-----------------------------------------------------------------------------
//EffectManager::~EffectManager()
//{
//}
//
////-----------------------------------------------------------------------------
////
////-----------------------------------------------------------------------------
//void EffectManager::Initialize(const Settings& settings)
//{
//	if (g_managerInstance == nullptr) {
//		g_managerInstance = this;
//	}
//}
//
//void EffectManager::Finalize()
//{
//	if (g_managerInstance == this) {
//		g_managerInstance = nullptr;
//	}
//}

LN_NAMESPACE_END
