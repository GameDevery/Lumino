//==============================================================================
// HLSL:DX9
//==============================================================================
#ifdef LN_HLSL_DX9


// オブジェクトのテクスチャ
sampler ObjTexSampler = sampler_state
{
	texture = <ln_MaterialTexture>;	// サイズは、速度と品質のバランス的に 512px がちょうどいい。
	MINFILTER = ANISOTROPIC;	// NONE,POINT だと、MipMap の境界にシャギのようなものが見える。LINEAR だと近景でもボケすぎる。
	MAGFILTER = LINEAR;			// ANISOTROPIC でも変わらない。LINEAR で良いのでは。
	MIPFILTER = LINEAR;			// ANISOTROPIC でも変わらない。LINEAR で良いのでは。
	MAXANISOTROPY = 16;
};

struct VS_OUTPUT
{
	float4	Pos		: POSITION;		// 位置
	float2	Tex		: TEXCOORD0;	// テクスチャ座標
};

//------------------------------------------------------------------------------
VS_OUTPUT Basic_VS(float3 Pos : POSITION)
{
	VS_OUTPUT output;
	
	// 頂点位置をスクリーン空間に変換
	output.Pos = mul(float4(Pos, 1.0), ln_WorldViewProjection);
	
	// テクスチャ座標
	output.Tex.x = Pos.x;
	output.Tex.y = Pos.z;
	
	return output;
}

//------------------------------------------------------------------------------
float4 Basic_PS(VS_OUTPUT input) : COLOR0
{
	float4 texColor = tex2D(ObjTexSampler, input.Tex);
	float4 texColor2 = tex2D(ObjTexSampler, input.Tex / 10.0);
	return texColor + texColor2;
}

//------------------------------------------------------------------------------
technique MainTec0
{
	pass P0
	{
		VertexShader = compile vs_3_0 Basic_VS();
		PixelShader	 = compile ps_3_0 Basic_PS();
	}
}

#endif

//==============================================================================
// GLSL
//==============================================================================
#ifdef LN_GLSL_VERTEX_Main


attribute vec3	ln_Vertex0;

varying vec2	v_TexUV;

void main()
{
	gl_Position = ln_WorldViewProjection * vec4(ln_Vertex0, 1.0);
	v_TexUV.x = ln_Vertex0.x;
	v_TexUV.y = ln_Vertex0.z;
}

#endif
#ifdef LN_GLSL_FRAGMENT_Main


varying vec2		v_TexUV;

void main()
{
	vec4 texColor = texture2D(ln_MaterialTexture, v_TexUV);
	vec4 texColor2 = texture2D(ln_MaterialTexture, v_TexUV / 10.0);
	gl_FragColor = texColor + texColor2;
}
#endif
