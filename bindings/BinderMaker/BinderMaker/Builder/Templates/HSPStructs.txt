
#include <windows.h>
#include "../hsp3plugin/hsp3plugin.h"
#include "../../../src/C_API/LuminoC.h"
#include "LuminoHSP.h"

//=============================================================================
// Common
//=============================================================================
#define sbAlloc hspmalloc
#define sbFree hspfree

static void* hspCommon_GetBlockSize(PVal *pval, PDAT *pdat, int *size)
{
	*size = pval->size - (((char *)pdat) - pval->pt);
	return (pdat);
}

static void hspCommon_AllocBlock(PVal *pval, PDAT *pdat, int size)
{
}

//=============================================================================
// Structs
//=============================================================================
[DEFINES]
//=============================================================================
// reffunc
//=============================================================================
bool g_leadSupport = false;

bool CheclDefault()
{
	int r = code_getprm();
	g_leadSupport = true;
	return (r == PARAM_ENDSPLIT);	// ')'
}

double GetParamDouble()
{
	if (g_leadSupport) {
		g_leadSupport = false;
		return *((double*)mpval->pt);
	}
	else {
		return code_getd();
	}
}

bool Structs_reffunc(int cmd, int* typeRes, void** retValPtr)
{
	g_leadSupport = false;
	
	switch (cmd)
	{
[REFFUNC_CASE]
	}
	return false;
}

//=============================================================================
// Register
//=============================================================================
void RegisterStructTypes(HSP3TYPEINFO *info)
{
[REGISTER]
}

