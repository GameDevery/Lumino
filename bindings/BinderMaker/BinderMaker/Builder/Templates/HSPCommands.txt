
#include <windows.h>
#include <string>
#include "../hsp3plugin/hsp3plugin.h"
#include "../../../C_API/include/LuminoC.h"
#include "LuminoHSP.h"

[PROTOTYPE]

//=============================================================================
// Common
//=============================================================================
int CodeGetI()
{
	return code_geti();
}
int CodeGetI(int defaultValue)
{
	return code_getdi(defaultValue);
}
double CodeGetD()
{
	return code_getd();
}
double CodeGetD(double defaultValue)
{
	return code_getdd(defaultValue);
}
const char* CodeGetS()
{
	return code_gets();
}
const char* CodeGetS(const char* defaultValue)
{
	return code_getds(defaultValue);
}
void* CodeGetData()
{
	// HspFunc_ の呼び出し順に注意。変わると例外する。
	PVal* MemoryArray = exinfo->HspFunc_prm_getpval();
	HspVarProc* vpSTR = exinfo->HspFunc_getproc(HSPVAR_FLAG_STR);

	HspVarCoreReset(MemoryArray); 			// 配列参照次元をリセット(必ず下記で使用する場合は、最初にこれをする事)
	exinfo->HspFunc_array(MemoryArray, 0);	// 一次元目設定
	
	return vpSTR->GetPtr(MemoryArray);
}

#define CodeGetVA_TypeChecked(ppval, type) \
	code_getva(ppval); \
	if ((*ppval)->flag != hsp##type##_typeid()) { throw HSPVAR_ERROR_TYPEMISS; }

std::string str_p0;
std::string str_p1;
std::string str_p2;
std::string str_p3;
std::string str_p4;
std::string str_p5;
std::string str_p6;
std::string str_p7;
std::string str_p8;

//=============================================================================
// cmdfunc
//=============================================================================

bool Commands_cmdfunc(int cmd, int* retVal)
{
	*retVal = RUNMODE_RUN;
	switch (cmd)
	{
[COMMANDS]
	default:
		puterror(HSPERR_UNSUPPORTED_FUNCTION);
	}
	return false;
}

